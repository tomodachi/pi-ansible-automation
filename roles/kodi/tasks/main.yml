---

- name: Install packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    update_cache: true

- name: Add kodi user
  ansible.builtin.user:
    name: kodi
    createhome: true
    shell: /bin/false
    password: false
    system: true
    groups: video,input,pulse-access

- name: Create Kodi service
  ansible.builtin.copy:
    src: ./files/kodi.service
    dest: /etc/systemd/system/kodi.service
    owner: kodi
    group: kodi
    mode: '600'
  notify:
    - Reload systemd
    - Restart kodi

- name: Start Kodi on boot
  ansible.builtin.systemd:
    name: kodi
    state: started
    enabled: true
  when: not ansible_check_mode

- name: Create kodi settings folders
  ansible.builtin.file:
    path: /home/kodi/.kodi/userdata
    state: directory
    owner: kodi
    group: kodi
    mode: '700'

- name: Setup kodi media sources
  ansible.builtin.copy:
    src: sources.xml
    dest: /home/kodi/.kodi/userdata/sources.xml
    owner: kodi
    group: kodi
    mode: '644'
  notify: Restart kodi
  tags: sources

- name: Register Raspberry PI model info
  ansible.builtin.shell: set -o pipefail && /usr/bin/cat /proc/cpuinfo |grep Model
  args:
    executable: /bin/bash
  register: pi_cpu_model
  check_mode: false
  changed_when: false

- name: Tweak gpu_mem for non Pi4 for video to work
  ansible.builtin.lineinfile:
    path: /boot/config.txt
    line: "gpu_mem=256"
    create: true
    owner: root
    group: root
    mode: '644'
  when: pi_cpu_model.stdout.find("Pi 4") == -1

- name: Tweak gpu_mem for Pi4 to make H265 HW decoding work
  ansible.builtin.lineinfile:
    path: /boot/config.txt
    line: "dtoverlay=rpivid-v4l2"
    create: true
    owner: root
    group: root
    mode: '644'
  when: pi_cpu_model.stdout.find("Pi 4") != -1
